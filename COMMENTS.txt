typedef struct s_data
{
	char				*input;
	char				*input_copy;
	t_token				*tokens;
	t_token				*final_tokens; //to execute
	int					num_pipes; //just in case handy for execution
	t_env_node			*envs;
}						t_data;

execution functions should take data->final_tokens linked list to execute commands stored in there. data->tokens is used for initial scanning and is later compressed into final_tokens

token has the following structure:

typedef struct s_token
{
	t_token_type		type;
	// for command name
	char				*value;
	// for command flags and etc.
	char				**args;
	int					args_count;
	// for redirections
	t_redirection		*redirections_in;
	t_redirection		*redirections_out;
	struct s_token		*prev;
	struct s_token		*next;
}						t_token;

each redirection is connected to the command which can have 
TOKEN_CMD or TOKEN_BUILTIN type

each redirection has the following structure:

typedef struct s_redirection
{
	t_token_type	type;
	char			*file;
	struct s_redirection *next;
}						t_redirection;

file = filename 

there are 4 types of redirections:
	TOKEN_REDIRECT_IN,
	TOKEN_REDIRECT_OUT,
	TOKEN_APPEND,
	TOKEN_HEREDOC

heredoc is also a file (not implemented yet, but will be stored as temporary .heredoc_file)

in the end executor function will handle a list like 
TOKEN_CMD with value as command, with args for flags and stuff, redirections_in and _out lists 
or
TOKEN_BUILTIN with value like echo, cd and etc.
TOKEN_PIPE
TOKEN_CMD
and so on

i'm storing spaces as separate tokens right now as it's crucial for proper echo implementation but i'm planing on removing extra spaces later

to summarize what's not yet implemented:
- haven't extensively tested final_list.c functions
- redirections are stored in the wrong order
- syntax errors
- extra spaces as command arguments
- heredoc 
--------
- garbage collection as a separate thing (rn nothing is freed)
